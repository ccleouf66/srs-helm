# Copyright ossrs, Inc.
# SPDX-License-Identifier: MIT

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
##

## @section Common parameters
##

image:
  repository: ossrs/srs
  tag: ""
  pullPolicy: IfNotPresent

replicaCount: 1

config: |
  listen              1935;
  max_connections     1000;
  daemon              off;

  srs_log_tank        console;
  srs_log_level       info;

  vhost live {
      tcp_nodelay     on;

      ingest obs_rts {
          enabled      on;
          input        rts://0.0.0.0:10080/live/stream;
          ffmpeg       /usr/bin/ffmpeg;

          engine raw_copy {
              enabled  on;
              vcodec   copy;
              acodec   copy;
              format   flv;
              output   rtmp://127.0.0.1/live/original;
          }
      }

      transcode youtube {
          enabled  on;
          ffmpeg   /usr/bin/ffmpeg;
          engine yt_passthrough {
              enabled  on;
              vcodec   copy;
              acodec   copy;
              format   flv;
              output   rtmp://a.rtmp.youtube.com/live2/YOUR_YOUTUBE_KEY;
          }
      }

      transcode twitch {
          enabled  on;
          ffmpeg   /usr/bin/ffmpeg;
          engine twitch_1080p60 {
              enabled  on;
              vfilter "zscale=t=linear:npl=100,format=gbrpf32le,tonemap=hable:desat=0,zscale=p=bt709:t=bt709:m=bt709:r=tv,format=yuv420p";
              vcodec   libx264;
              vprofile high;
              vpreset  veryfast;
              vbitrate 6000;
              vfps     60;
              vbufsize 6000;
              acodec   aac;
              abitrate 160;
              asample_rate 48000;
              format   flv;
              output   rtmp://live.twitch.tv/app/YOUR_TWITCH_KEY;
          }
      }

      hls {
          enabled         on;
          hls_fragment    1;
          hls_window      5;
          hls_path        ./objs/nginx/html;
          hls_m3u8_file   [app]/[stream].m3u8;
          hls_ts_file     [app]/[stream]-[seq].ts;
      }

      webrtc {
          enabled     on;
          listen      8000;
          tcp_nodelay on;
      }
  }
  
# config: {} 

# The configuration for SRS can be overridden by environment variables.
# See https://github.com/ossrs/srs/blob/develop/trunk/conf/full.conf
conf:
  SRS_LOG_TANK: "console"
  SRS_HTTP_SERVER_ENABLED: "on"
  SRS_HTTP_API_ENABLED: "on"
  SRS_VHOST_HTTP_REMUX_ENABLED: "on"
  SRS_VHOST_HLS_ENABLED: "on"
  SRS_SRT_SERVER_ENABLED: "on"
  SRS_VHOST_SRT_ENABLED: "on"
  SRS_VHOST_SRT_TO_RTMP: "on"
  SRS_RTC_SERVER_ENABLED: "on"
  SRS_RTC_SERVER_CANDIDATE: "*"
  SRS_VHOST_RTC_ENABLED: "on"
  SRS_VHOST_RTC_RTMP_TO_RTC: "on"
  SRS_VHOST_RTC_RTC_TO_RTMP: "on"

# The environment variables to set in the container.
# See https://github.com/ossrs/srs/blob/develop/trunk/conf/full.conf
env: []
  #- name: SRS_LOG_TANK
  #  value: "file"

# The WebRTC candidate, which is your server's public IP address, can be accessed by the client.
# See https://ossrs.io/lts/en-us/docs/v5/doc/webrtc#config-candidate for details.
# Note that if this value is not empty, it will override the SRS_RTC_SERVER_CANDIDATE value in
# both the {{.Values.conf}} and {{.Values.env}}.
candidate: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  rtmp: 1935
  http: 8080
  api: 1985
  srt: 10080
  rtc: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
